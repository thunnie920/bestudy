name : docker-build

on:
  push:
      branches: ['main']

env:
  DOCKER_IMAGE: ghcr.io/thunnie920/study
  DOCKER_CONTAINER: study

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3
    
    - name: setup node 16
      uses: actions/setup-node@v3
      with:
        node-version: 16
        cache: 'npm'

    - name: steup .env
      run: |
        echo "DB_HOST=${{secrets.DB_HOST}}" >> .env
        echo "DB_POrt=${{secrets.DB_PORT}}" >> .env
        echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
        echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env
        echo "DB_DATABASE=${{secrets.DB_DATABASE}}" >> .env
        cat .env
      
    - name: install dependencies
      run: npm install

    - name: run test
      run: npm run test


build:
  needs: test
  runs-on: ubuntu-20.04
  steps:
    - name: Checkout Source Code
      uses: actions/checkout@v3

    - name: Setup Docker
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: docker login
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{github.actor}}
        password: ${{secrets.GITHUB_TOKEN}}

    - name: build and push image
      id: docker_Build
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{env.DOCKER_IMAGE}}:latest

deploy:
  needs: build
  runs-on: self-hosted
  steps:
    - name: setup .env
      run: |
        echo "DB_HOST=${{secrets.DB_HOST}}" >> .env
        echo "DB_PORT=${{secrets.DB_PORT}}" >> .env
        echo "DB_PASSWORD=${{secrets.DB_PASSWORD}}" >> .env
        echo "DB_USERNAME=${{secrets.DB_USERNAME}}" >> .env
        echo "DB_DATABASE=${{secrets.DB_DATABASE}}" >> .env
        cat .env
    - name: Run Docker
      run: |
        docker stop ${{env.DOCKER_CONTAINER}} && docker rn ${{env.DOCEKR_CONTAINER}}
        docker run --env-file ./.env -d -p 3000:3000 --name ${{env.DOCKER_CONTAINER}}

        
